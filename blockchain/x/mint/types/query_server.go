package types

import (
	"context"
)

// QueryServer defines the gRPC querier service.
type QueryServer interface {
	// Params returns the total set of minting parameters.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// Inflation returns the current minting inflation value.
	Inflation(context.Context, *QueryInflationRequest) (*QueryInflationResponse, error)
	// AnnualProvisions current minting annual provisions value.
	AnnualProvisions(context.Context, *QueryAnnualProvisionsRequest) (*QueryAnnualProvisionsResponse, error)
}

// QueryClient defines the gRPC querier client.
type QueryClient interface {
	// Params returns the total set of minting parameters.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...interface{}) (*QueryParamsResponse, error)
	// Inflation returns the current minting inflation value.
	Inflation(ctx context.Context, in *QueryInflationRequest, opts ...interface{}) (*QueryInflationResponse, error)
	// AnnualProvisions current minting annual provisions value.
	AnnualProvisions(ctx context.Context, in *QueryAnnualProvisionsRequest, opts ...interface{}) (*QueryAnnualProvisionsResponse, error)
}

// NewQueryClient creates a new QueryClient.
func NewQueryClient(clientCtx interface{}) QueryClient {
	// This would normally be generated by protobuf
	// For now, returning nil as a placeholder
	return nil
}

// RegisterQueryHandlerClient registers the http handlers for service Query to "mux".
func RegisterQueryHandlerClient(ctx context.Context, mux interface{}, client QueryClient) error {
	// This would normally be generated by protobuf
	// For now, returning nil as a placeholder
	return nil
}

// RegisterQueryServer registers a service implementation with the server.
func RegisterQueryServer(s interface{}, srv QueryServer) {
	// This would normally be generated by protobuf
	// For now, no-op as a placeholder
}
